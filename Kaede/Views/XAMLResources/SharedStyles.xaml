<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">
    <!-- Color Palette -->
    <SolidColorBrush x:Key="KBackground" Color="#121212" />
    <SolidColorBrush x:Key="KForeground" Color="#FFFFFF" />
    <SolidColorBrush x:Key="KColor1" Color="#E53935" />
    <SolidColorBrush x:Key="KColor2" Color="#90A4AE" />
    <SolidColorBrush x:Key="KColor3" Color="#1E1E1E" />
    <SolidColorBrush x:Key="KColor4" Color="#424242" />
    <FontFamily x:Key="FFMarkProFont">/Resources/Fonts/FFMarkProMed.otf#Mark Pro</FontFamily>
    
    <!-- Base Styles -->
    <Style TargetType="{x:Type ContentControl}">
        <Setter Property="Background" Value="{StaticResource KBackground}" />
        <Setter Property="FontFamily" Value="{StaticResource FFMarkProFont}" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource KForeground}" />
    </Style>

    <!-- Modern TextBox Style that works with the existing templates -->
    <Style x:Key="ModernTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Template" Value="{StaticResource KTextBoxControlTemplate}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource KForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource KColor4}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Padding" Value="0,12,0,8"/>
        <Setter Property="MaxLength" Value="30" />
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="CaretBrush" Value="{StaticResource KColor1}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource KTextBoxErrorTemplate}"/>
    </Style>

    <!-- Button Styles -->

    <Style x:Key="KButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource KColor1}"/>
        <Setter Property="Foreground" Value="{StaticResource KForeground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="24,12"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Padding="6,0"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <Border x:Name="RippleEffect" 
                                    Background="#20FFFFFF" 
                                    Opacity="0"
                                    CornerRadius="4"/>
                            <ContentPresenter x:Name="contentPresenter" 
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            RecognizesAccessKey="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#D32F2F"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RippleEffect" Property="Opacity" Value="0.4"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#424242"/>
                            <Setter Property="Foreground" Value="#757575"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="KButtonStyleMinimal" TargetType="Button" BasedOn="{StaticResource KButtonStyle}">
        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource KBackground}" />
            <Setter Property="Foreground" Value="{StaticResource KForeground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{StaticResource KForeground}"
                        BorderThickness="2"
                        CornerRadius="4"
                        Padding="6,0"
                        SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="_contentPresenter" HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    
    <Style x:Key="KDropdownButtonStyle" TargetType="{x:Type ToggleButton}">
        <Style.Setters>
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="{StaticResource KBackground}" />
            <Setter Property="Foreground" Value="{StaticResource KForeground}" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Margin" Value="0,-4,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="Top" />
                            <TextBlock x:Name="Arrow" 
                                   Text="&#x2304;"
                                   VerticalAlignment="Center"
                                   Margin="0,0,5,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Arrow" Property="Text" Value="&#x2C4;"/>
                                <Setter Property="Margin" Value="1,2,0,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!-- Form Styles -->

    <Style TargetType="TextBox" x:Key="KTextBoxGenericStyle">
        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource KBackground}" />
            <Setter Property="Foreground" Value="{StaticResource KForeground}" />
            <Setter Property="MaxLength" Value="30" />
        </Style.Setters>
    </Style>

    <Style TargetType="TextBox" x:Key="KTextBoxValidationStyle" BasedOn="{StaticResource KTextBoxGenericStyle}">
        <Style.Setters>
            <Setter Property="Margin" Value="0,6,0,6" />
            <Setter Property="Padding" Value="0,6,0,6" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="FontFamily" Value="Montserrat" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="CaretBrush" Value="LightGray" />
            <Setter Property="BorderBrush" Value="DarkGray" />
            <Setter Property="BorderThickness" Value="0,0,0,2" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="Margin" Value="0,6,0,32" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListViewItem" x:Key="KListViewItemStyle">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource KBackground}"/>
        <Setter Property="ItemsControl.Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border Name="Selection" Background="{StaticResource KColor1}" Opacity="0.2" Visibility="Collapsed"/>
                        <GridViewRowPresenter Grid.RowSpan="2"
                                         Margin="{TemplateBinding Padding}"
                                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2A2A2A"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Selection" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="FormCardStyle" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                    <GradientStop Color="#1E1E1E" Offset="0"/>
                    <GradientStop Color="#2A2A2A" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="40"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20" ShadowDepth="0" Color="#000000" Opacity="0.4"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.8"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FormTitleStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>

    <Style x:Key="FormSubtitleStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource KColor2}"/>
        <Setter Property="Margin" Value="0,0,0,24"/>
    </Style>

    <Style x:Key="InputLabelStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="0,0,0,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource KColor2}"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>

    <Style x:Key="FormSectionStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="0,0,0,24"/>
    </Style>

    <!-- Hyperlink Style -->
    <Style TargetType="Hyperlink" x:Key="KHyperLinkStyle">
        <Setter Property="Foreground" Value="{StaticResource KColor1}"/>
        <Setter Property="TextDecorations" Value="None"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline"/>
                <Setter Property="Foreground" Value="#FFCDD2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}" x:Key="KGridViewColumnHeaderStyle">
        <Setter Property="Background" Value="{StaticResource KBackground}" />
        <Setter Property="Foreground" Value="{StaticResource KForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            Margin="4"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="ComboBoxItem" x:Key="KComboBoxItemStyle">
        <Setter Property="Background" Value="{StaticResource KBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource KForeground}"/>
    </Style>

    <Style TargetType="ComboBox" x:Key="KComboBoxStyle">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid Background="Black">
                        <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="5">
                            <ToggleButton x:Name="ToggleButton"
                                      Background="Black" Foreground="White"
                                      IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <Path x:Name="Arrow" Data="M 0 0 L 4 4 L 8 0 Z"
                                      Fill="White" Width="8" Height="4"
                                      VerticalAlignment="Center"/>
                                </StackPanel>
                            </ToggleButton>
                        </Border>
                        <Popup x:Name="Popup" Placement="Bottom"
                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border Background="Black" BorderBrush="Gray" BorderThickness="1">
                                <ScrollViewer>
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleY="0"/>
                <!-- Start collapsed -->
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).ScaleY"
                                     From="0" To="1" 
                                     Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).ScaleY"
                                     From="1" To="0" 
                                     Duration="0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <Style TargetType="ToggleButton" x:Key="KToggleButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border" 
                            Background="{StaticResource KBackground}" 
                            BorderBrush="{StaticResource KForeground}" 
                            BorderThickness="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource KColor1}"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.05" ScaleY="1.05"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="DarkRed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="xctk:DateTimePicker" x:Key="KXCTKDateTimePickerStyle">
        <Setter Property="Background" Value="{StaticResource KBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource KForeground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource KColor2}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="5"/>
    </Style>
</ResourceDictionary>
